# -*- coding: utf-8 -*-
"""ProjetoExtensão.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10NO3GD7EzdeXtFMl3Pf0BItVI3PUNfe1
"""

#Pips
!pip install chart_studio
!pip install plotly
!pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip
!pip install --upgrade Pillow



#Imports
import cufflinks as cf
from plotly.offline import plot, iplot
import pandas as pd
import numpy as np
import plotly.graph_objs as go
import plotly.io as pio
import plotly.express as px
import pandas_profiling
import chart_studio
import chart_studio.plotly as pyo
chart_studio.tools.set_credentials_file(username='gustavolettiere', api_key='p1212121112')
pio.renderers.default = 'colab'

# Carregamento da Base
arquivo = '/content/drive/MyDrive/Colab Notebooks/MakeOverMonday/violence_data.csv'
dataset = pd.read_csv(arquivo, sep=',', header=0)
print('Base carregada com sucesso!')

# Criação da coluna Continente e realocação de paises
dataset['Continent'] = ''

for i in range(len(dataset)):
  if dataset.loc[i, 'Country'] in ['Brazil', 'Argentina', 'Uruguay', 'Paraguay', 'Chile', 'Bolivia', 'Peru', 'Ecuador', 'Colombia', 'Venezuela', 'Guyana', 'Suriname', 'French Guiana']:
    dataset.loc[i, 'Continent'] = 'South America'
  elif dataset.loc[i, 'Country'] in ['United States', 'Canada', 'Mexico', 'Guatemala', 'Belize', 'Honduras', 'El Salvador', 'Nicaragua', 'Costa Rica', 'Panama', 'Cuba', 'Dominican Republic', 'Haiti', 'Jamaica', 'Puerto Rico', 'Trinidad and Tobago', 'Barbados', 'Saint Lucia', 'Saint Vincent and the Grenadines', 'Grenada', 'Antigua and Barbuda', 'Saint Kitts and Nevis', 'Dominica']:
    dataset.loc[i, 'Continent'] = 'North America'
  elif dataset.loc[i, 'Country'] in ['Russia', 'Ukraine', 'Belarus', 'Moldova', 'Romania', 'Bulgaria','Albania', 'Greece', 'Georgia']:
    dataset.loc[i, 'Continent'] = 'Europe'
  elif dataset.loc[i, 'Country'] in ['China', 'Maldives', 'Timor-Leste','Yemen', 'Philippines', 'Pakistan', 'Myanmar', 'Nepal', 'Japan', 'India', 'Kyrgyz Republic', 'Cambodia', 'Indonesia', 'Jordan','South Korea', 'Afghanistan', 'Turkmenistan', 'Bangladesh', 'Tajikistan', 'North Korea', 'Cyprus', 'Turkey', 'Mongolia', 'Taiwan', 'Uzbekistan', 'Hong Kong', 'Macau', 'Armenia', 'Azerbaijan','Kazakhstan']:
    dataset.loc[i, 'Continent'] = 'Asia'
  elif dataset.loc[i, 'Country'] in ['Australia', 'New Zealand', 'Papua New Guinea', 'Fiji', 'Solomon Islands', 'Vanuatu', 'Tonga','Kyrgyzstan', 'Samoa', 'Kiribati', 'Tuvalu', 'Nauru']:
    dataset.loc[i, 'Continent'] = 'Oceania'
  elif dataset.loc[i, 'Country'] in ['Morocco','Kenya','Rwanda','Uganda', 'Sao Tome and Principe', 'Tanzania', 'Mozambique', 'Madagascar', 'Malawi', 'Burundi', 'Comoros', 'Algeria', 'Tunisia', 'Libya', 'Egypt', 'Sudan', 'South Sudan', 'Chad', 'Niger', 'Mali', 'Mauritania', 'Senegal', 'Gambia', 'Guinea-Bissau', 'Guinea', 'Sierra Leone', 'Liberia', 'Côte d\'Ivoire', 'Burkina Faso', 'Ghana', 'Togo', 'Benin', 'Nigeria', 'Cameroon', 'Central African Republic', "Cote d'Ivoire",'Eritrea','Ethiopia', 'Equatorial Guinea', 'Gabon', 'Congo', 'Congo Democratic Republic', 'Democratic Republic of the Congo', 'Angola', 'Zambia', 'Zimbabwe', 'Botswana', 'Namibia', 'South Africa', 'Eswatini', 'Lesotho']:
    dataset.loc[i, 'Continent'] = 'Africa'

# Conta quantos valores nulos temos em 'Value'
null_values = dataset['Value'].isnull().sum()
print(f"Número de valores nulos': {null_values}")

# Remove os valores nulos
dataset_novo = dataset.dropna(subset=['Value'])

#Testando para ver se funcionou
print(f"Número de valores nulos depois do comando: {dataset_novo['Value'].isnull().sum()}")

#Renomeando todos os Survey Year

dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2000', 'Survey Year'] = '2000'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2001', 'Survey Year'] = '2001'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2002', 'Survey Year'] = '2002'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2003', 'Survey Year'] = '2003'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2004', 'Survey Year'] = '2004'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2005', 'Survey Year'] = '2005'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2006', 'Survey Year'] = '2006'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2007', 'Survey Year'] = '2007'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2008', 'Survey Year'] = '2008'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2009', 'Survey Year'] = '2009'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2010', 'Survey Year'] = '2010'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2011', 'Survey Year'] = '2011'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2012', 'Survey Year'] = '2012'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2013', 'Survey Year'] = '2013'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2014', 'Survey Year'] = '2014'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2015', 'Survey Year'] = '2015'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2016', 'Survey Year'] = '2016'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2017', 'Survey Year'] = '2017'
dataset_novo.loc[dataset_novo['Survey Year'] == '01/01/2018', 'Survey Year'] = '2018'

# Gráfico de escolaridade x value
dataset_education = dataset_novo[dataset_novo['Demographics Response'].isin(['Higher', 'Primary', 'Secondary', 'No education'])]
dataset_education.groupby('Demographics Response')['Value'].mean().iplot(kind='bar', title='Média de aprovação por nível de educação')

grouped_data = dataset_novo.groupby('Survey Year')['Value'].mean().reset_index()

fig = go.Figure(data=[go.Bar(x=grouped_data['Survey Year'], y=grouped_data['Value'])])
fig.update_layout(title='Média de aprovação ao longo dos anos',
                  xaxis_title='Ano',
                  yaxis_title='Média de Aprovação')
fig.show()
pyo.plot(fig, filename='Média de Aprovação ao longo dos anos', auto_open=True)

# Gráfico com a % de aprovação de cada questão

df_grouped = dataset_novo.groupby('Question')['Value'].mean().reset_index()
df_grouped = df_grouped.sort_values(by='Value')

fig = px.bar(df_grouped, x='Value', y='Question', title='% de pessoas que concordam com a violência', orientation='h')
fig.update_layout(hovermode='closest')
fig.show()
pyo.plot(fig, filename='% de pessoas que concordam com a violência', auto_open=True)

# % de aprovação por continente

df_continent = dataset_novo.groupby('Continent')['Value'].mean().reset_index()
df_continent = df_continent.sort_values('Value', ascending=True)

fig = px.bar(df_continent, x='Continent', y='Value', title='Média de Aprovação por Continente', color='Continent')
fig.update_layout(hovermode='closest')
fig.show()
pyo.plot(fig, filename='Média de Aprovação por Continente', auto_open=True)

#Bubble chart

df = dataset_novo
df_grouped = df.groupby('Country')['Value'].mean().reset_index()
df_grouped = df_grouped.sort_values('Value', ascending=True)

top_10_countries = df_grouped.tail(10)
fig = px.scatter(top_10_countries, x='Country', y='Value', size='Value', color='Country',
                 title='Ranking de paises com maiores aprovações de violência')
fig.show()
pyo.plot(fig, filename='Ranking de paises com maiores % de aprovação de violência', auto_open=True)

# Gráfico com % de aprovação dividido por gênero e faixa etária.

df_grouped = dataset_novo.groupby(['Gender', 'Demographics Response'])['Value'].mean().unstack()
df_grouped = df_grouped[['15-24', '25-34', '35-49']]

fig = px.bar(df_grouped, barmode='group', x=df_grouped.index, y=df_grouped.columns, title='Média de Value por Gênero e Faixa Etária')
fig.update_layout(hovermode='closest')
fig.show()
pyo.plot(fig, filename='Média de Value por gênero e faixa etária', auto_open=True)
